@import "tailwindcss";

:root {
  /* Blue, Black, and Pink Gradient Theme */
  --background: 220 13% 9%;
  --foreground: 220 9% 90%;
  --card: 220 13% 9%;
  --card-foreground: 220 9% 90%;
  --popover: 220 13% 9%;
  --popover-foreground: 220 9% 90%;
  --primary: 220 100% 60%;
  --primary-foreground: 220 13% 9%;
  --secondary: 220 14% 23%;
  --secondary-foreground: 220 9% 90%;
  --muted: 220 14% 23%;
  --muted-foreground: 220 9% 70%;
  --accent: 330 100% 60%;
  --accent-foreground: 220 13% 9%;
  --destructive: 0 84% 60%;
  --destructive-foreground: 220 13% 9%;
  --border: 220 14% 23%;
  --input: 220 14% 23%;
  --ring: 330 100% 60%;
  --radius: 0.5rem;
  
  /* Custom gradient colors */
  --gradient-blue: 220 100% 60%;
  --gradient-pink: 330 100% 60%;
  --gradient-purple: 280 100% 60%;
  --gradient-dark: 220 13% 9%;
  --gradient-darker: 220 13% 6%;
  --gradient-gray: 220 14% 23%;
  --gradient-light-gray: 220 9% 70%;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

/* Light mode - Blue, Black, and Pink Gradient Theme */
.light {
  --background: 0 0% 100%;
  --foreground: 220 13% 9%;
  --card: 0 0% 100%;
  --card-foreground: 220 13% 9%;
  --popover: 0 0% 100%;
  --popover-foreground: 220 13% 9%;
  --primary: 220 100% 60%;
  --primary-foreground: 0 0% 100%;
  --secondary: 220 14% 96%;
  --secondary-foreground: 220 13% 9%;
  --muted: 220 14% 96%;
  --muted-foreground: 220 9% 70%;
  --accent: 330 100% 60%;
  --accent-foreground: 0 0% 100%;
  --destructive: 0 84% 60%;
  --destructive-foreground: 0 0% 100%;
  --border: 220 14% 90%;
  --input: 220 14% 90%;
  --ring: 330 100% 60%;
}

/* Light theme logo styling */
.light .chatgpt-logo {
  background: linear-gradient(135deg, 
    hsl(var(--gradient-blue)) 0%, 
    hsl(var(--gradient-pink)) 100%
  );
  color: black;
}

.light .gradient-text {
  background: linear-gradient(135deg, 
    hsl(var(--gradient-blue)) 0%, 
    hsl(var(--gradient-pink)) 100%
  );
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  font-weight: bold;
}

/* Dark mode - Blue, Black, and Pink Gradient Theme */
.dark {
  --background: 220 13% 9%;
  --foreground: 220 9% 90%;
  --card: 220 13% 9%;
  --card-foreground: 220 9% 90%;
  --popover: 220 13% 9%;
  --popover-foreground: 220 9% 90%;
  --primary: 220 100% 60%;
  --primary-foreground: 220 13% 9%;
  --secondary: 220 14% 23%;
  --secondary-foreground: 220 9% 90%;
  --muted: 220 14% 23%;
  --muted-foreground: 220 9% 70%;
  --accent: 330 100% 60%;
  --accent-foreground: 220 13% 9%;
  --destructive: 0 84% 60%;
  --destructive-foreground: 220 13% 9%;
  --border: 220 14% 23%;
  --input: 220 14% 23%;
  --ring: 330 100% 60%;
}

/* Dark theme logo styling */
.dark .chatgpt-logo {
  background: linear-gradient(135deg, 
    hsl(var(--gradient-blue)) 0%, 
    hsl(var(--gradient-pink)) 100%
  );
  color: white;
}

.dark .gradient-text {
  background: linear-gradient(135deg, 
    hsl(var(--gradient-blue)) 0%, 
    hsl(var(--gradient-pink)) 100%
  );
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  font-weight: bold;
}

* {
  border-color: hsl(var(--border));
}

body {
  background: linear-gradient(135deg, 
    hsl(var(--gradient-darker)) 0%, 
    hsl(var(--gradient-dark)) 25%, 
    hsl(var(--gradient-blue) / 0.1) 50%, 
    hsl(var(--gradient-pink) / 0.1) 75%, 
    hsl(var(--gradient-dark)) 100%
  );
  background-attachment: fixed;
  color: hsl(var(--foreground));
  font-family: var(--font-sans), Arial, Helvetica, sans-serif;
  min-height: 100vh;
}

/* Smooth theme transitions */
* {
  transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;
}

/* Custom scrollbar styles - Discord-like */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: hsl(var(--muted));
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: hsl(var(--muted-foreground) / 0.3);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--muted-foreground) / 0.5);
}

/* Focus styles */
.focus-visible:focus {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

/* Line clamp utility */
.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Custom animations */
@keyframes slide-in-from-bottom-2 {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fade-in-up {
  from {
    opacity: 0;
    transform: translateY(30px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes message-slide-in {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.animate-in {
  animation-fill-mode: both;
}

.slide-in-from-bottom-2 {
  animation-name: slide-in-from-bottom-2;
}

.fade-in-up {
  animation-name: fade-in-up;
}

.message-slide-in {
  animation-name: message-slide-in;
}

.duration-300 {
  animation-duration: 300ms;
}

.duration-500 {
  animation-duration: 500ms;
}

/* Enhanced backdrop blur support */
@supports (backdrop-filter: blur(1px)) {
  .backdrop-blur-sm {
    backdrop-filter: blur(4px);
  }
  
  .backdrop-blur-md {
    backdrop-filter: blur(8px);
  }
}

/* Smooth hover transitions for buttons */
button, .button {
  transition: all 0.15s ease;
}

/* Enhanced shadow effects - Discord-like */
.shadow-lg {
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.3), 0 4px 6px -2px rgba(0, 0, 0, 0.2);
}

.shadow-xl {
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.3), 0 10px 10px -5px rgba(0, 0, 0, 0.2);
}

/* Dark mode specific shadows */
.dark .shadow-lg {
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.5), 0 4px 6px -2px rgba(0, 0, 0, 0.3);
}

.dark .shadow-xl {
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.5), 0 10px 10px -5px rgba(0, 0, 0, 0.3);
}

/* Gradient text support */
.bg-clip-text {
  -webkit-background-clip: text;
  background-clip: text;
}

/* Enhanced input focus states - Discord-like */
input:focus, textarea:focus {
  outline: none;
  border-color: hsl(var(--ring));
  box-shadow: 0 0 0 2px hsl(var(--ring) / 0.2);
}

/* Smooth message animations */
.message-enter {
  opacity: 0;
  transform: translateY(20px);
}

.message-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 300ms, transform 300ms;
}

/* Responsive design utilities */
@media (max-width: 768px) {
  .mobile-optimized {
    padding: 1rem;
  }
}

/* Enhanced button hover effects - Discord-like */
.btn-glow:hover {
  box-shadow: 0 0 20px hsl(var(--ring) / 0.4);
  transform: translateY(-1px);
}

/* Theme toggle specific styles */
.theme-toggle {
  position: relative;
}

.theme-toggle svg {
  transition: all 0.2s ease;
}

/* MUI Switch customization */
.MuiSwitch-root {
  --switch-width: 62px;
  --switch-height: 34px;
  --thumb-size: 32px;
}

.MuiSwitch-root .MuiSwitch-switchBase {
  transition: all 0.2s ease;
}

.MuiSwitch-root .MuiSwitch-thumb {
  transition: all 0.2s ease;
}

.MuiSwitch-root .MuiSwitch-track {
  transition: all 0.2s ease;
}

/* Custom switch colors for light theme */
.light .MuiSwitch-root .MuiSwitch-track {
  background-color: hsl(var(--muted)) !important;
}

.light .MuiSwitch-root .MuiSwitch-thumb {
  background-color: hsl(var(--primary)) !important;
}

/* Custom switch colors for dark theme */
.dark .MuiSwitch-root .MuiSwitch-track {
  background-color: hsl(var(--muted)) !important;
}

.dark .MuiSwitch-root .MuiSwitch-thumb {
  background-color: hsl(var(--primary)) !important;
}

/* Dark mode specific enhancements */
.dark {
  color-scheme: dark;
}

/* Discord-specific styles */
.discord-gradient {
  background: linear-gradient(135deg, hsl(var(--discord-darker)) 0%, hsl(var(--discord-dark)) 100%);
}

.discord-card {
  background: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  border-radius: 16px;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

.discord-input {
  background: hsl(var(--input));
  border: 1px solid hsl(var(--border));
  border-radius: 16px;
  color: hsl(var(--foreground));
  transition: all 0.2s ease;
}

.discord-input:focus {
  border-color: hsl(var(--ring));
  box-shadow: 0 0 0 2px hsl(var(--ring) / 0.2);
}

.discord-button {
  background: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
  border-radius: 12px;
  font-weight: 600;
  transition: all 0.2s ease;
}

.discord-button:hover {
  background: hsl(var(--accent) / 0.9);
  transform: translateY(-1px);
  box-shadow: 0 8px 25px hsl(var(--accent) / 0.3);
}

.discord-button:active {
  transform: translateY(0);
}

.discord-button-primary {
  background: hsl(var(--discord-blurple));
  color: white;
  border-radius: 12px;
  font-weight: 600;
  transition: all 0.2s ease;
}

.discord-button-primary:hover {
  background: hsl(var(--discord-blurple) / 0.9);
  transform: translateY(-1px);
  box-shadow: 0 8px 25px hsl(var(--discord-blurple) / 0.3);
}

.discord-button-primary:active {
  transform: translateY(0);
}

/* Message bubble styles */
.user-message {
  background: hsl(var(--discord-blurple));
  color: white;
  border-radius: 18px 18px 4px 18px;
  box-shadow: 0 4px 12px hsl(var(--discord-blurple) / 0.3);
}

.bot-message {
  background: hsl(var(--discord-gray));
  color: hsl(var(--discord-light-gray));
  border-radius: 18px 18px 18px 4px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

/* Glass morphism effects */
.glass {
  background: hsl(var(--background) / 0.8);
  backdrop-filter: blur(12px);
  border: 1px solid hsl(var(--border) / 0.3);
}

.glass-header {
  background: hsl(var(--background) / 0.9);
  backdrop-filter: blur(16px);
  border-bottom: 1px solid hsl(var(--border) / 0.2);
}

.glass-input {
  background: hsl(var(--input) / 0.1);
  backdrop-filter: blur(12px);
  border: 1px solid hsl(var(--border) / 0.3);
  color: white;
}

.glass-input::placeholder {
  color: hsl(var(--muted-foreground) / 0.7);
}

/* Hover glow effects */
.hover-glow:hover {
  box-shadow: 0 0 20px hsl(var(--accent) / 0.4);
}

.hover-glow-primary:hover {
  box-shadow: 0 0 20px hsl(var(--discord-blurple) / 0.4);
}

/* Timestamp styling */
.message-timestamp {
  font-size: 0.75rem;
  color: hsl(var(--muted-foreground) / 0.7);
  margin-top: 0.5rem;
  opacity: 0.8;
}

/* Divider lines */
.message-divider {
  height: 1px;
  background: linear-gradient(90deg, transparent, hsl(var(--border)), transparent);
  margin: 1rem 0;
  opacity: 0.3;
}

/* Enhanced bot message styling for ChatGPT-like appearance */
.bot-message {
  background: #2b2d31;
  color: #ffffff;
  border-radius: 18px 18px 18px 4px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  transition: all 0.2s ease;
}

.bot-message:hover {
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
  transform: translateY(-1px);
}

/* Action button animations */
.action-button {
  transition: all 0.15s ease;
}

.action-button:hover {
  transform: scale(1.1);
}

/* TTS pulse animation */
@keyframes tts-pulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.7;
    transform: scale(1.05);
  }
}

.tts-pulse {
  animation: tts-pulse 2s ease-in-out infinite;
}

/* Feedback button active states */
.feedback-active-up {
  background: rgba(34, 197, 94, 0.2);
  color: #22c55e;
  box-shadow: 0 0 0 1px rgba(34, 197, 94, 0.3);
}

.feedback-active-down {
  background: rgba(239, 68, 68, 0.2);
  color: #ef4444;
  box-shadow: 0 0 0 1px rgba(239, 68, 68, 0.3);
}

/* Copy success animation */
@keyframes copy-success {
  0% {
    transform: scale(0.8);
    opacity: 0;
  }
  50% {
    transform: scale(1.1);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.copy-success {
  animation: copy-success 0.3s ease-out;
}

/* Custom utility classes for background and text colors */
.bg-background {
  background-color: hsl(var(--background));
}

.bg-foreground {
  background-color: hsl(var(--foreground));
}

.bg-card {
  background-color: hsl(var(--card));
}

.bg-card-foreground {
  background-color: hsl(var(--card-foreground));
}

.bg-popover {
  background-color: hsl(var(--popover));
}

.bg-popover-foreground {
  background-color: hsl(var(--popover-foreground));
}

.bg-primary {
  background-color: hsl(var(--primary));
}

.bg-primary-foreground {
  background-color: hsl(var(--primary-foreground));
}

.bg-secondary {
  background-color: hsl(var(--secondary));
}

.bg-secondary-foreground {
  background-color: hsl(var(--secondary-foreground));
}

.bg-muted {
  background-color: hsl(var(--muted));
}

.bg-muted-foreground {
  background-color: hsl(var(--muted-foreground));
}

.bg-accent {
  background-color: hsl(var(--accent));
}

.bg-accent-foreground {
  background-color: hsl(var(--accent-foreground));
}

.bg-destructive {
  background-color: hsl(var(--destructive));
}

.bg-destructive-foreground {
  background-color: hsl(var(--destructive-foreground));
}

.bg-border {
  background-color: hsl(var(--border));
}

.bg-input {
  background-color: hsl(var(--input));
}

.bg-ring {
  background-color: hsl(var(--ring));
}

/* Text color utility classes */
.text-background {
  color: hsl(var(--background));
}

.text-foreground {
  color: hsl(var(--foreground));
}

.text-card {
  color: hsl(var(--card));
}

.text-card-foreground {
  color: hsl(var(--card-foreground));
}

.text-popover {
  color: hsl(var(--popover));
}

.text-popover-foreground {
  color: hsl(var(--popover-foreground));
}

.text-primary {
  color: hsl(var(--primary));
}

.text-primary-foreground {
  color: hsl(var(--primary-foreground));
}

.text-secondary {
  color: hsl(var(--secondary));
}

.text-secondary-foreground {
  color: hsl(var(--secondary-foreground));
}

.text-muted {
  color: hsl(var(--muted));
}

.text-muted-foreground {
  color: hsl(var(--muted-foreground));
}

.text-accent {
  color: hsl(var(--accent));
}

.text-accent-foreground {
  color: hsl(var(--accent-foreground));
}

.text-destructive {
  color: hsl(var(--destructive));
}

.text-destructive-foreground {
  color: hsl(var(--destructive-foreground));
}

.text-border {
  color: hsl(var(--border));
}

.text-input {
  color: hsl(var(--input));
}

.text-ring {
  color: hsl(var(--ring));
}

/* Beautiful Gradient Classes */
.gradient-bg {
  background: linear-gradient(135deg, 
    hsl(var(--gradient-darker)) 0%, 
    hsl(var(--gradient-dark)) 25%, 
    hsl(var(--gradient-blue) / 0.1) 50%, 
    hsl(var(--gradient-pink) / 0.1) 75%, 
    hsl(var(--gradient-dark)) 100%
  );
}

.gradient-bg-reverse {
  background: linear-gradient(315deg, 
    hsl(var(--gradient-darker)) 0%, 
    hsl(var(--gradient-dark)) 25%, 
    hsl(var(--gradient-blue) / 0.1) 50%, 
    hsl(var(--gradient-pink) / 0.1) 75%, 
    hsl(var(--gradient-dark)) 100%
  );
}

.gradient-blue-pink {
  background: linear-gradient(135deg, 
    hsl(var(--gradient-blue)) 0%, 
    hsl(var(--gradient-purple)) 50%, 
    hsl(var(--gradient-pink)) 100%
  );
}

.gradient-pink-blue {
  background: linear-gradient(135deg, 
    hsl(var(--gradient-pink)) 0%, 
    hsl(var(--gradient-purple)) 50%, 
    hsl(var(--gradient-blue)) 100%
  );
}

.gradient-card {
  background: linear-gradient(135deg, 
    hsl(var(--card) / 0.9) 0%, 
    hsl(var(--card) / 0.7) 100%
  );
  backdrop-filter: blur(20px);
  border: 1px solid hsl(var(--border) / 0.3);
}

.gradient-button {
  background: linear-gradient(135deg, 
    hsl(var(--gradient-blue)) 0%, 
    hsl(var(--gradient-pink)) 100%
  );
  color: white;
  border: none;
  transition: all 0.3s ease;
}

.gradient-button:hover {
  background: linear-gradient(135deg, 
    hsl(var(--gradient-pink)) 0%, 
    hsl(var(--gradient-blue)) 100%
  );
  transform: translateY(-2px);
  box-shadow: 0 10px 25px hsl(var(--gradient-pink) / 0.4);
}

.gradient-text {
  background: linear-gradient(135deg, 
    hsl(var(--gradient-blue)) 0%, 
    hsl(var(--gradient-pink)) 100%
  );
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  font-weight: bold;
}

.gradient-border {
  border: 2px solid transparent;
  background: linear-gradient(135deg, 
    hsl(var(--gradient-blue)) 0%, 
    hsl(var(--gradient-pink)) 100%
  ) border-box;
  -webkit-mask: 
    linear-gradient(#fff 0 0) padding-box, 
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: destination-out;
  mask-composite: exclude;
}

.gradient-glow {
  box-shadow: 
    0 0 20px hsl(var(--gradient-blue) / 0.3),
    0 0 40px hsl(var(--gradient-pink) / 0.2);
}

.gradient-glow-hover:hover {
  box-shadow: 
    0 0 30px hsl(var(--gradient-blue) / 0.5),
    0 0 60px hsl(var(--gradient-pink) / 0.3);
}

/* Animated gradient background */
@keyframes gradient-shift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.gradient-animated {
  background: linear-gradient(135deg, 
    hsl(var(--gradient-darker)) 0%, 
    hsl(var(--gradient-dark)) 25%, 
    hsl(var(--gradient-blue) / 0.1) 50%, 
    hsl(var(--gradient-pink) / 0.1) 75%, 
    hsl(var(--gradient-dark)) 100%
  );
  background-size: 400% 400%;
  animation: gradient-shift 15s ease infinite;
}

/* Glass morphism with gradient borders */
.glass-gradient {
  background: hsl(var(--card) / 0.1);
  backdrop-filter: blur(20px);
  border: 1px solid transparent;
  background-clip: padding-box;
  position: relative;
}

.glass-gradient::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: inherit;
  padding: 1px;
  background: linear-gradient(135deg, 
    hsl(var(--gradient-blue) / 0.5), 
    hsl(var(--gradient-pink) / 0.5)
  );
  -webkit-mask: 
    linear-gradient(#fff 0 0) content-box, 
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: destination-out;
  mask-composite: exclude;
  pointer-events: none;
}


